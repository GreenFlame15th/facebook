version: '3.5'

services:
  postgres_user:
    container_name: postgres_user
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
      PGDATA: /data/postgres
    volumes:
      - postgres-user:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  postgres_post:
    container_name: postgres_post
    image: postgres
    environment:
      POSTGRES_HOST: postgres-post
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: posts
      PGDATA: /data/postgres
    volumes:
      - postgres-post:/data/postgres
    ports:
      - "5433:5432"
    restart: unless-stopped

  postgres_relation:
    container_name: postgres_relation
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: relations
      PGDATA: /data/postgres
    volumes:
      - postgres-relation:/data/postgres
    ports:
      - "5434:5432"
    networks:
      - postgres
    restart: unless-stopped

  postgres_notification:
    container_name: postgres_notification
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notifications
      PGDATA: /data/postgres
    volumes:
      - postgres-notification:/data/postgres
    ports:
      - "5435:5432"
    restart: unless-stopped

  postgres-authentication:
    container_name: postgres-authentication
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: authentication
      PGDATA: /data/postgres
    volumes:
      - postgres-authentication:/data/postgres
    ports:
      - "5436:5432"
    networks:
      - general
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin1
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  neo4j_relation:
    image: neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_relation_data:/data/
    environment:
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_AUTH=neo4j/password

  rabbitmq_general:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq_general
    ports:
      - "5672:5672"
      - "15672:15672"

  rabbitmq_user_notification:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq_user_notification
    ports:
      - "5673:5672"
      - "15673:15672"

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - redis:/data

  authentication:
    image: authentication:latest
    container_name: authentication
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8120:8120"
    networks:
      - general
    depends_on:
      - eureka
      - postgres-authentication

networks:
  postgres:
    driver: bridge
  general:
    driver: bridge

volumes:
  postgres-user:
  postgres-post:
  postgres-relation:
  postgres-notification:
  postgres-authentication:
  pgadmin:
  neo4j_relation_data:
  redis:
    driver: local